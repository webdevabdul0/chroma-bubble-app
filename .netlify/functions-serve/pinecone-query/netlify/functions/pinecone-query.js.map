{
  "version": 3,
  "sources": ["file:///D:/chroma-bubble-app/netlify/functions/pinecone-query.js"],
  "sourceRoot": "C:/Users/abdul/AppData/Local/Temp/tmp-15996-OJYpkoX0s7xq",
  "sourcesContent": ["export async function handler(event) {\r\n  console.log('Received event:', event);\r\n\r\n  if (event.httpMethod === 'OPTIONS') {\r\n    console.log('OPTIONS preflight request');\r\n    return {\r\n      statusCode: 200,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n      },\r\n      body: 'OK',\r\n    };\r\n  }\r\n\r\n  try {\r\n    console.log('Parsing event body...');\r\n    const { embedding, pdfId } = JSON.parse(event.body);\r\n    console.log('Parsed embedding and pdfId:', { embedding, pdfId });\r\n\r\n    if (!embedding || !Array.isArray(embedding)) {\r\n      throw new Error('Invalid embedding vector');\r\n    }\r\n\r\n    const namespace = pdfId || '__default__';\r\n    console.log('Using namespace:', namespace);\r\n\r\n    const apiKey = process.env.PINECONE_API_KEY;\r\n    if (!apiKey) {\r\n      console.error('Missing Pinecone API key');\r\n      return {\r\n        statusCode: 500,\r\n        body: JSON.stringify({ error: 'Missing Pinecone API key' }),\r\n      };\r\n    }\r\n\r\n    const url = 'https://pdfai-openai-w6dhxr9.svc.aped-4627-b74a.pinecone.io/query';\r\n    const bodyPayload = {\r\n      vector: embedding,\r\n      topK: 3,\r\n      includeMetadata: true,\r\n      namespace: namespace,\r\n    };\r\n\r\n    console.log('Sending request to Pinecone:', JSON.stringify(bodyPayload));\r\n\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Api-Key': apiKey,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(bodyPayload),\r\n    });\r\n\r\n    console.log('Response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('Pinecone API error:', errorText);\r\n      return {\r\n        statusCode: response.status,\r\n        body: JSON.stringify({ error: errorText }),\r\n      };\r\n    }\r\n\r\n    const responseText = await response.text();\r\n    console.log('Raw response text:', responseText);\r\n\r\n    let data;\r\n    try {\r\n      data = JSON.parse(responseText);\r\n    } catch (e) {\r\n      console.error('Failed to parse JSON:', e);\r\n      return {\r\n        statusCode: 500,\r\n        body: JSON.stringify({ error: 'Invalid JSON response from Pinecone', rawResponse: responseText }),\r\n      };\r\n    }\r\n\r\n    return {\r\n      statusCode: 200,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Handler error:', error);\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ error: error.message }),\r\n    };\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsB,QAAQ,OAAO;AACnC,UAAQ,IAAI,mBAAmB,KAAK;AAEpC,MAAI,MAAM,eAAe,WAAW;AAClC,YAAQ,IAAI,2BAA2B;AACvC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI;AACF,YAAQ,IAAI,uBAAuB;AACnC,UAAM,EAAE,WAAW,MAAM,IAAI,KAAK,MAAM,MAAM,IAAI;AAClD,YAAQ,IAAI,+BAA+B,EAAE,WAAW,MAAM,CAAC;AAE/D,QAAI,CAAC,aAAa,CAAC,MAAM,QAAQ,SAAS,GAAG;AAC3C,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AAEA,UAAM,YAAY,SAAS;AAC3B,YAAQ,IAAI,oBAAoB,SAAS;AAEzC,UAAM,SAAS,QAAQ,IAAI;AAC3B,QAAI,CAAC,QAAQ;AACX,cAAQ,MAAM,0BAA0B;AACxC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,2BAA2B,CAAC;AAAA,MAC5D;AAAA,IACF;AAEA,UAAM,MAAM;AACZ,UAAM,cAAc;AAAA,MAClB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB;AAAA,IACF;AAEA,YAAQ,IAAI,gCAAgC,KAAK,UAAU,WAAW,CAAC;AAEvE,UAAM,WAAW,MAAM,MAAM,KAAK;AAAA,MAChC,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,WAAW;AAAA,QACX,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,WAAW;AAAA,IAClC,CAAC;AAED,YAAQ,IAAI,oBAAoB,SAAS,MAAM;AAE/C,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB,SAAS;AAC9C,aAAO;AAAA,QACL,YAAY,SAAS;AAAA,QACrB,MAAM,KAAK,UAAU,EAAE,OAAO,UAAU,CAAC;AAAA,MAC3C;AAAA,IACF;AAEA,UAAM,eAAe,MAAM,SAAS,KAAK;AACzC,YAAQ,IAAI,sBAAsB,YAAY;AAE9C,QAAI;AACJ,QAAI;AACF,aAAO,KAAK,MAAM,YAAY;AAAA,IAChC,SAAS,GAAG;AACV,cAAQ,MAAM,yBAAyB,CAAC;AACxC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,uCAAuC,aAAa,aAAa,CAAC;AAAA,MAClG;AAAA,IACF;AAEA,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,+BAA+B;AAAA,MACjC;AAAA,MACA,MAAM,KAAK,UAAU,IAAI;AAAA,IAC3B;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,kBAAkB,KAAK;AACrC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,IAC/C;AAAA,EACF;AACF;",
  "names": []
}
